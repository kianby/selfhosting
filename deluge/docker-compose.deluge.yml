version: '3.8'

services:
  deluge:
    container_name: deluge
    image: linuxserver/deluge
    restart: unless-stopped
    networks:
      - deluge-frontend
    environment:
      DELUGE_LOGLEVEL: info
      TZ: ${TZ}    
    expose:
      - 8112
    ports:
      - ${DELUGE_TORRENT_PORT}:${DELUGE_TORRENT_PORT}/tcp
      - ${DELUGE_TORRENT_PORT}:${DELUGE_TORRENT_PORT}/udp
    volumes:
      - deluge_config:/config:rw
      - deluge_downloads:/downloads:rw      
    labels:
      - traefik.enable=true
      - traefik.http.routers.deluge.rule=Host(`${HOST_WWW}.${DOMAIN}`) && PathPrefix(`${PATH_DELUGE}`) 
      - traefik.http.routers.deluge.entrypoints=https
      - traefik.http.routers.deluge.tls=true
      - traefik.http.services.deluge.loadbalancer.server.port=8112
      - traefik.http.routers.deluge.middlewares=delugeHeader,sameOriginHeader,delugeRedir,delugePStrip
      - traefik.http.middlewares.delugeHeader.headers.customrequestheaders.X-Deluge-Base=${PATH_DELUGE}/
      - traefik.http.middlewares.sameOriginHeader.headers.customrequestheaders.X-Frame-Options=SAMEORIGIN
      - traefik.http.middlewares.delugePStrip.stripprefix.prefixes=${PATH_DELUGE}
      - traefik.http.middlewares.delugeRedir.redirectregex.regex=^(.*)${PATH_DELUGE}$$
      - traefik.http.middlewares.delugeRedir.redirectregex.replacement=$${1}${PATH_DELUGE}/
      - traefik.docker.network=deluge-frontend
    profiles: ["disabled"]

  torrent:
    container_name: torrent
    image: kianby/nginx-streaming
    restart: unless-stopped
    networks:
      - dmz
    volumes:
      - deluge_downloads:/downloads:ro
    expose:
      - 80
    # shortcut to bypass traefik limitation
    ports:
      - ${DOWNLOAD_HTTP_PORT}:80         
    profiles: ["disabled"]
    
volumes:
  deluge_config:
  deluge_downloads:
